#!/usr/bin/env python

from __future__ import print_function
import re, sys, logging
import argparse

# logging.basicConfig(level = logging.DEBUG)

import numpy as np
import sisfft

FNAME = re.compile(r'.*sisfft-.*-L-([0-9]*)-s0-([0-9]*)-beta-([0-9]*.?[e0-9-]*)[-.]')

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('files', metavar='FILE', nargs='+',
                        help = '.npy files to open')
    args = parser.parse_args()

    for name in args.files:
        match = FNAME.match(name)
        if match is None:
            print('don\'t understand: %s' % name, file = sys.stderr)
            continue

        L = int(match.group(1))
        s0 = int(match.group(2))
        beta = float(match.group(3))

        pmf = np.load(name)

        sisfft_pvalue = sisfft._sisfft.pvalue(pmf, s0, L, beta)

        nc_pvalue = sisfft._utils.log_sum(sisfft._naive.power_naive(pmf, L)[s0:])

        abs_diff = sisfft._utils.logsubexp(max(nc_pvalue, sisfft_pvalue),
                                          min(nc_pvalue, sisfft_pvalue))
        rel_error = np.exp(abs_diff - nc_pvalue)
        print("%f %f\n%f %s" % (sisfft_pvalue, nc_pvalue, rel_error,
                                '****' if rel_error > beta else ''))

if __name__ == '__main__':
    main()
